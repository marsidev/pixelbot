on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

name: Create Release

jobs:
  build:
    name: Create Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '24'

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: latest

      - name: Get pnpm store directory
        shell: bash
        run: echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Install web-ext
        run: npm install --global web-ext

      - name: Build XPI package
        run: pnpm build:xpi

      - name: Create Release
        id: create_release
        uses: comnoco/create-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          files: |
            web-ext-artifacts/pixelbot.xpi
          body: |
            ## ü¶ä Pixelbot Firefox Extension

            Enhanced wplace.live automation with modern UI and advanced features.

            ### üì¶ Installation
            1. Download `pixelbot.xpi`
            2. Open Firefox ‚Üí `about:debugging#/runtime/this-firefox`
            3. Click "Load Temporary Add-on" and select the XPI file

            ### ‚ö†Ô∏è Note
            For permanent installation, the extension needs to be signed by Mozilla or installed in Firefox Developer Edition.

            ---
            **Release**: ${{ github.ref_name }}
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
